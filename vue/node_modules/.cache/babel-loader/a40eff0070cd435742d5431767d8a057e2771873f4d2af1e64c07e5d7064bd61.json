{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"person-info\"\n};\nconst _hoisted_2 = {\n  class: \"label\"\n};\nconst _hoisted_3 = {\n  class: \"value\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"edit-dialog\"\n};\nconst _hoisted_6 = [\"type\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"个人信息\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userInfo, (value, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"info-item\"\n    }, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString(key) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(value), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.openEditDialog(key)\n    }, \"修改\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 修改对话框 \"), $data.showEditDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, \"修改 \" + _toDisplayString($data.currentField), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editValue = $event),\n    type: $options.getInputType($data.currentField)\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelDynamic, $data.editValue]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveEdit && $options.saveEdit(...args))\n  }, \"保存\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"取消\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","userInfo","value","_hoisted_2","_toDisplayString","_hoisted_3","onClick","$event","$options","openEditDialog","_hoisted_4","_createCommentVNode","showEditDialog","_hoisted_5","currentField","_cache","editValue","type","getInputType","_hoisted_6","args","saveEdit","cancelEdit"],"sources":["D:\\CODING\\IDEA-coding\\SpringDemo\\SpringBootVue\\vue\\src\\views\\PersonInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"person-info\">\r\n    <h2>个人信息</h2>\r\n    <div v-for=\"(value, key) in userInfo\" :key=\"key\" class=\"info-item\">\r\n      <span class=\"label\">{{ key }}:</span>\r\n      <span class=\"value\">{{ value }}</span>\r\n      <button @click=\"openEditDialog(key)\">修改</button>\r\n    </div>\r\n\r\n    <!-- 修改对话框 -->\r\n    <div v-if=\"showEditDialog\" class=\"edit-dialog\">\r\n      <h3>修改 {{ currentField }}</h3>\r\n      <input v-model=\"editValue\" :type=\"getInputType(currentField)\" />\r\n      <button @click=\"saveEdit\">保存</button>\r\n      <button @click=\"cancelEdit\">取消</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInfo: {},        // 存储用户信息\r\n      showEditDialog: false, // 控制对话框显示\r\n      currentField: '',    // 当前修改的字段名（如 'nickname'）\r\n      editValue: ''        // 修改后的值\r\n    };\r\n  },\r\n  created() {\r\n    // 从 sessionStorage 获取用户信息\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.userInfo = {\r\n      '用户名': user.username,\r\n      '昵称': user.nickname,\r\n      '年龄': user.age,\r\n      '性别': user.sex,\r\n      '地址': user.address,\r\n      '生日': user.birthday,\r\n      '头像': user.avatar\r\n    };\r\n  },\r\n  methods: {\r\n    // 打开修改对话框\r\n    openEditDialog(field) {\r\n      this.currentField = field;\r\n      this.editValue = this.userInfo[field];\r\n      this.showEditDialog = true;\r\n    },\r\n    // 根据字段类型返回输入框类型\r\n    getInputType(field) {\r\n      if (field === '年龄') return 'number';\r\n      if (field === '生日') return 'date';\r\n      return 'text';\r\n    },\r\n    // 保存修改\r\n    async saveEdit() {\r\n      try {\r\n        // 调用后端 API 更新数据\r\n        const response = await this.$axios.put('/api/user/update', {\r\n          field: this.mapFieldName(this.currentField), // 映射为英文字段（如 'nickname'）\r\n          value: this.editValue\r\n        });\r\n\r\n        // 更新本地 sessionStorage 和页面显示\r\n        const user = JSON.parse(sessionStorage.getItem('user'));\r\n        user[this.mapFieldName(this.currentField)] = this.editValue;\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        this.userInfo[this.currentField] = this.editValue;\r\n        this.showEditDialog = false;\r\n      } catch (error) {\r\n        alert('修改失败');\r\n      }\r\n    },\r\n    // 取消修改\r\n    cancelEdit() {\r\n      this.showEditDialog = false;\r\n    },\r\n    // 中文字段映射为实体类字段名\r\n    mapFieldName(chineseField) {\r\n      const map = {\r\n        '用户名': 'username',\r\n        '昵称': 'nickname',\r\n        '年龄': 'age',\r\n        '性别': 'sex',\r\n        '地址': 'address',\r\n        '生日': 'birthday',\r\n        '头像': 'avatar'\r\n      };\r\n      return map[chineseField];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.info-item {\r\n  margin: 10px 0;\r\n}\r\n\r\n.edit-dialog {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  background: white;\r\n  border: 1px solid #ccc;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAGdA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAO;mBALzB;;EAAAC,GAAA;EAU+BD,KAAK,EAAC;;mBAVrC;;uBACEE,mBAAA,CAeM,OAfNC,UAeM,G,0BAdJC,mBAAA,CAAa,YAAT,MAAI,uB,kBACRF,mBAAA,CAIMG,SAAA,QAPVC,WAAA,CAGgCC,KAAA,CAAAC,QAAQ,EAHxC,CAGiBC,KAAK,EAAER,GAAG;yBAAvBC,mBAAA,CAIM;MAJiCD,GAAG,EAAEA,GAAG;MAAED,KAAK,EAAC;QACrDI,mBAAA,CAAqC,QAArCM,UAAqC,EAAAC,gBAAA,CAAdV,GAAG,IAAG,GAAC,iBAC9BG,mBAAA,CAAsC,QAAtCQ,UAAsC,EAAAD,gBAAA,CAAfF,KAAK,kBAC5BL,mBAAA,CAAgD;MAAvCS,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACf,GAAG;OAAG,IAAE,iBAN7CgB,UAAA,E;kCASIC,mBAAA,WAAc,EACHX,KAAA,CAAAY,cAAc,I,cAAzBjB,mBAAA,CAKM,OALNkB,UAKM,GAJJhB,mBAAA,CAA8B,YAA1B,KAAG,GAAAO,gBAAA,CAAGJ,KAAA,CAAAc,YAAY,kB,gBACtBjB,mBAAA,CAAgE;IAZtE,uBAAAkB,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAYsBP,KAAA,CAAAgB,SAAS,GAAAT,MAAA;IAAGU,IAAI,EAAET,QAAA,CAAAU,YAAY,CAAClB,KAAA,CAAAc,YAAY;0BAZjEK,UAAA,I,iBAYsBnB,KAAA,CAAAgB,SAAS,E,GACzBnB,mBAAA,CAAqC;IAA5BS,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEZ,QAAA,CAAAa,QAAA,IAAAb,QAAA,CAAAa,QAAA,IAAAD,IAAA,CAAQ;KAAE,IAAE,GAC5BvB,mBAAA,CAAuC;IAA9BS,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEZ,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,IAAAF,IAAA,CAAU;KAAE,IAAE,E,KAdpCT,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}