{"ast":null,"code":"export default {\n  data() {\n    return {\n      userInfo: {},\n      // 存储用户信息\n      showEditDialog: false,\n      // 控制对话框显示\n      currentField: '',\n      // 当前修改的字段名（如 'nickname'）\n      editValue: '' // 修改后的值\n    };\n  },\n  created() {\n    // 从 sessionStorage 获取用户信息\n    const user = JSON.parse(sessionStorage.getItem('user'));\n    this.userInfo = {\n      '用户名': user.username,\n      '昵称': user.nickname,\n      '年龄': user.age,\n      '性别': user.sex,\n      '地址': user.address,\n      '生日': user.birthday,\n      '头像': user.avatar\n    };\n  },\n  methods: {\n    // 打开修改对话框\n    openEditDialog(field) {\n      this.currentField = field;\n      this.editValue = this.userInfo[field];\n      this.showEditDialog = true;\n    },\n    // 根据字段类型返回输入框类型\n    getInputType(field) {\n      if (field === '年龄') return 'number';\n      if (field === '生日') return 'date';\n      return 'text';\n    },\n    // 保存修改\n    async saveEdit() {\n      try {\n        // 调用后端 API 更新数据\n        const response = await this.$axios.put('/api/user/update', {\n          field: this.mapFieldName(this.currentField),\n          // 映射为英文字段（如 'nickname'）\n          value: this.editValue\n        });\n\n        // 更新本地 sessionStorage 和页面显示\n        const user = JSON.parse(sessionStorage.getItem('user'));\n        user[this.mapFieldName(this.currentField)] = this.editValue;\n        sessionStorage.setItem('user', JSON.stringify(user));\n        this.userInfo[this.currentField] = this.editValue;\n        this.showEditDialog = false;\n      } catch (error) {\n        alert('修改失败');\n      }\n    },\n    // 取消修改\n    cancelEdit() {\n      this.showEditDialog = false;\n    },\n    // 中文字段映射为实体类字段名\n    mapFieldName(chineseField) {\n      const map = {\n        '用户名': 'username',\n        '昵称': 'nickname',\n        '年龄': 'age',\n        '性别': 'sex',\n        '地址': 'address',\n        '生日': 'birthday',\n        '头像': 'avatar'\n      };\n      return map[chineseField];\n    }\n  }\n};","map":{"version":3,"names":["data","userInfo","showEditDialog","currentField","editValue","created","user","JSON","parse","sessionStorage","getItem","username","nickname","age","sex","address","birthday","avatar","methods","openEditDialog","field","getInputType","saveEdit","response","$axios","put","mapFieldName","value","setItem","stringify","error","alert","cancelEdit","chineseField","map"],"sources":["D:\\CODING\\IDEA-coding\\SpringDemo\\SpringBootVue\\vue\\src\\views\\PersonInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"person-info\">\r\n    <h2>个人信息</h2>\r\n    <div v-for=\"(value, key) in userInfo\" :key=\"key\" class=\"info-item\">\r\n      <span class=\"label\">{{ key }}:</span>\r\n      <span class=\"value\">{{ value }}</span>\r\n      <button @click=\"openEditDialog(key)\">修改</button>\r\n    </div>\r\n\r\n    <!-- 修改对话框 -->\r\n    <div v-if=\"showEditDialog\" class=\"edit-dialog\">\r\n      <h3>修改 {{ currentField }}</h3>\r\n      <input v-model=\"editValue\" :type=\"getInputType(currentField)\" />\r\n      <button @click=\"saveEdit\">保存</button>\r\n      <button @click=\"cancelEdit\">取消</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInfo: {},        // 存储用户信息\r\n      showEditDialog: false, // 控制对话框显示\r\n      currentField: '',    // 当前修改的字段名（如 'nickname'）\r\n      editValue: ''        // 修改后的值\r\n    };\r\n  },\r\n  created() {\r\n    // 从 sessionStorage 获取用户信息\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.userInfo = {\r\n      '用户名': user.username,\r\n      '昵称': user.nickname,\r\n      '年龄': user.age,\r\n      '性别': user.sex,\r\n      '地址': user.address,\r\n      '生日': user.birthday,\r\n      '头像': user.avatar\r\n    };\r\n  },\r\n  methods: {\r\n    // 打开修改对话框\r\n    openEditDialog(field) {\r\n      this.currentField = field;\r\n      this.editValue = this.userInfo[field];\r\n      this.showEditDialog = true;\r\n    },\r\n    // 根据字段类型返回输入框类型\r\n    getInputType(field) {\r\n      if (field === '年龄') return 'number';\r\n      if (field === '生日') return 'date';\r\n      return 'text';\r\n    },\r\n    // 保存修改\r\n    async saveEdit() {\r\n      try {\r\n        // 调用后端 API 更新数据\r\n        const response = await this.$axios.put('/api/user/update', {\r\n          field: this.mapFieldName(this.currentField), // 映射为英文字段（如 'nickname'）\r\n          value: this.editValue\r\n        });\r\n\r\n        // 更新本地 sessionStorage 和页面显示\r\n        const user = JSON.parse(sessionStorage.getItem('user'));\r\n        user[this.mapFieldName(this.currentField)] = this.editValue;\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        this.userInfo[this.currentField] = this.editValue;\r\n        this.showEditDialog = false;\r\n      } catch (error) {\r\n        alert('修改失败');\r\n      }\r\n    },\r\n    // 取消修改\r\n    cancelEdit() {\r\n      this.showEditDialog = false;\r\n    },\r\n    // 中文字段映射为实体类字段名\r\n    mapFieldName(chineseField) {\r\n      const map = {\r\n        '用户名': 'username',\r\n        '昵称': 'nickname',\r\n        '年龄': 'age',\r\n        '性别': 'sex',\r\n        '地址': 'address',\r\n        '生日': 'birthday',\r\n        '头像': 'avatar'\r\n      };\r\n      return map[chineseField];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.info-item {\r\n  margin: 10px 0;\r\n}\r\n\r\n.edit-dialog {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px;\r\n  background: white;\r\n  border: 1px solid #ccc;\r\n}\r\n</style>"],"mappings":"AAoBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CAAC,CAAC;MAAS;MACrBC,cAAc,EAAE,KAAK;MAAE;MACvBC,YAAY,EAAE,EAAE;MAAK;MACrBC,SAAS,EAAE,EAAC,CAAS;IACvB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvD,IAAI,CAACT,QAAO,GAAI;MACd,KAAK,EAAEK,IAAI,CAACK,QAAQ;MACpB,IAAI,EAAEL,IAAI,CAACM,QAAQ;MACnB,IAAI,EAAEN,IAAI,CAACO,GAAG;MACd,IAAI,EAAEP,IAAI,CAACQ,GAAG;MACd,IAAI,EAAER,IAAI,CAACS,OAAO;MAClB,IAAI,EAAET,IAAI,CAACU,QAAQ;MACnB,IAAI,EAAEV,IAAI,CAACW;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACjB,YAAW,GAAIiB,KAAK;MACzB,IAAI,CAAChB,SAAQ,GAAI,IAAI,CAACH,QAAQ,CAACmB,KAAK,CAAC;MACrC,IAAI,CAAClB,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD;IACAmB,YAAYA,CAACD,KAAK,EAAE;MAClB,IAAIA,KAAI,KAAM,IAAI,EAAE,OAAO,QAAQ;MACnC,IAAIA,KAAI,KAAM,IAAI,EAAE,OAAO,MAAM;MACjC,OAAO,MAAM;IACf,CAAC;IACD;IACA,MAAME,QAAQA,CAAA,EAAG;MACf,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,kBAAkB,EAAE;UACzDL,KAAK,EAAE,IAAI,CAACM,YAAY,CAAC,IAAI,CAACvB,YAAY,CAAC;UAAE;UAC7CwB,KAAK,EAAE,IAAI,CAACvB;QACd,CAAC,CAAC;;QAEF;QACA,MAAME,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvDJ,IAAI,CAAC,IAAI,CAACoB,YAAY,CAAC,IAAI,CAACvB,YAAY,CAAC,IAAI,IAAI,CAACC,SAAS;QAC3DK,cAAc,CAACmB,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACsB,SAAS,CAACvB,IAAI,CAAC,CAAC;QACpD,IAAI,CAACL,QAAQ,CAAC,IAAI,CAACE,YAAY,IAAI,IAAI,CAACC,SAAS;QACjD,IAAI,CAACF,cAAa,GAAI,KAAK;MAC7B,EAAE,OAAO4B,KAAK,EAAE;QACdC,KAAK,CAAC,MAAM,CAAC;MACf;IACF,CAAC;IACD;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC9B,cAAa,GAAI,KAAK;IAC7B,CAAC;IACD;IACAwB,YAAYA,CAACO,YAAY,EAAE;MACzB,MAAMC,GAAE,GAAI;QACV,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE;MACR,CAAC;MACD,OAAOA,GAAG,CAACD,YAAY,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}