{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _cache[0] || (_cache[0] = [_createElementVNode(\"h1\", null, \"个人信息\", -1 /* HOISTED */), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"加载中...\")], -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["_createElementBlock","_cache","_createElementVNode"],"sources":["D:\\CODING\\IDEA-coding\\SpringDemo\\SpringBootVue\\vue\\src\\views\\PersonInfo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>个人信息</h1>\r\n<!--    <div v-if=\"user\">-->\r\n<!--      <div v-for=\"(value, key) in user\" :key=\"key\">-->\r\n<!--        <p>-->\r\n<!--          <strong>{{ key }}:</strong>-->\r\n<!--          <span v-if=\"!isEditing[key]\">{{ value }}</span>-->\r\n<!--          <el-input v-else v-model=\"user[key]\" style=\"width: 200px;\"></el-input>-->\r\n<!--          <el-button v-if=\"!isEditing[key]\" @click=\"editField(key)\">修改</el-button>-->\r\n<!--          <el-button v-else @click=\"saveField(key)\">保存</el-button>-->\r\n<!--        </p>-->\r\n<!--      </div>-->\r\n<!--      <p><strong>头像:</strong>-->\r\n<!--        <el-avatar :src=\"user?.avatar\" style=\"margin-right: 10px\">-->\r\n<!--          <img v-if=\"!user?.avatar\" src=\"../photos/default.jpg\" alt=\"\"/>-->\r\n<!--        </el-avatar>-->\r\n<!--        <el-button v-if=\"!isEditing.avatar\" @click=\"editField('avatar')\">修改</el-button>-->\r\n<!--        <el-button v-else @click=\"saveField('avatar')\">保存</el-button>-->\r\n<!--      </p>-->\r\n<!--    </div>-->\r\n    <div v-else>\r\n      <p>加载中...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ArrowDown } from \"@element-plus/icons-vue\";\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Header\",\r\n  props: ['user'],\r\n  data() {\r\n    return {\r\n      user: {},\r\n      isEditing: {}\r\n    };\r\n  },\r\n  created() {\r\n    let userStr = sessionStorage.getItem('user') || \"{}\";\r\n    this.user = JSON.parse(userStr);\r\n    console.log(this.user);\r\n    // 初始化编辑状态\r\n    Object.keys(this.user).forEach(key => {\r\n      this.$set(this.isEditing, key, false);\r\n    });\r\n  },\r\n  methods: {\r\n    editField(key) {\r\n      this.$set(this.isEditing, key, true);\r\n    },\r\n    saveField(key) {\r\n      this.$set(this.isEditing, key, false);\r\n      // 这里可以添加保存逻辑，比如发送请求到服务器\r\n      console.log(`Saved ${key}: ${this.user[key]}`);\r\n    }\r\n  },\r\n  components: { ArrowDown }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 添加样式 */\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAuBM,aAAAC,MAAA,QAAAA,MAAA,OAtBJC,mBAAA,CAAa,YAAT,MAAI,qBAmBRA,mBAAA,CAEM,cADJA,mBAAA,CAAa,WAAV,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}